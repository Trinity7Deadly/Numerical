#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <complex.h>
#include <string.h>

// Define long int as lint for later use
typedef long int
lint ;

// Create a structure called fraction for later use
typedef struct {
  lint a ;
  lint b ;
} fraction ;

// Prints the fraction in a legible format
void print_frac(char front[], fraction a, char back[]) {
  printf("%s(%ld/%ld)%s", front, a.n, a.d, back) ;
}

// Finds the greatest common denominator
lint greatestCD(lint a, lint b) {
  if (a == 0) {
    return b ;
    
  } else if (b == 0) {
    return a ;
    
  } else if (a > b) {
    return greatestCD(a%b, b) ;
    
  } else {
    return greatestCD(a, b%a) ;
    
  }
}

// Reduces the fractoin using the greatestCD function
fraction reduce_frac(fraction a) {
  fraction frac ;
  lint temp ;

  temp = greatestCD(labs(a.n), labs(a.d)) ;

  frac.n = frac.n/temp ;
  frac.d = frac.d/temp ;

  if (r.d < 0) {
    r.d = -r.d ;
    r.n = -r.n ;
  }

  return frac ;
}

// Creates a fraction
fraction create_frac(lint numerator, lint denominator) {
  fraction frac ;
  frac.n = numerator ;
  frac.d = denominator ;
  return reduce_frac(frac) ;
}
